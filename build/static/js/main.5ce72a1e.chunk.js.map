{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newPerson","post","id","person","put","concat","delete","Filter","_ref","personsToShow","handleFilterChange","react_default","a","createElement","value","onChange","PersonForm","_ref2","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","_ref3","persons","removePerson","map","key","name","number","App_RemoveButton","RemoveButton","_ref4","onClick","window","confirm","Notification","_ref5","message","notificationStyle","style","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setPersonsToShow","_useState9","_useState10","setNotificationStyle","_useState11","_useState12","setMessage","successNotificationStyle","color","fontSize","background","borderStyle","borderRadius","padding","marginBottom","errorNotificationStyle","useEffect","personService","initialPersons","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","personObject","includes","personToUpdate","find","returnedPerson","setTimeout","catch","error","filter","App_Persons","toUpperCase","personToRemove","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5ce72a1e.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst baseUrl = \"https://secret-taiga-99169.herokuapp.com/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from \"react\"\nimport personService from \"./services/persons\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [personsToShow, setPersonsToShow] = useState(\"\")\n  const [notificationStyle, setNotificationStyle] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  const successNotificationStyle = {\n    color: \"green\",\n    fontSize: 20,\n    background: \"lightgrey\",\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  const errorNotificationStyle = {\n    color: \"red\",\n    fontSize: 20,\n    background: \"lightgrey\",\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.map(person => person.name).includes(newName)) {\n      if (window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n        const personToUpdate = persons.find(person => person.name === newName)\n        personService\n          .update(personToUpdate.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(\n              person => person.id !== personToUpdate.id\n                ? person\n                : returnedPerson\n            ))\n            setNotificationStyle(successNotificationStyle)\n            setMessage(`${personObject.name}: numero päivitettiin`)\n            setTimeout(() => {setMessage(null)}, 5000)\n          })\n          .catch(error => {\n            setNotificationStyle(errorNotificationStyle)\n            setMessage(`Henkilö ${personObject.name} on jo valitettavasti poistettu palvelimelta`)\n            setTimeout(() => {setMessage(null)}, 5000)\n            setPersons(persons.filter(\n              person => person.id !== personToUpdate.id)\n            )\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName(\"\")\n          setNewNumber(\"\")\n          setNotificationStyle(successNotificationStyle)\n          setMessage(`Lisättiin ${personObject.name}`)\n          setTimeout(() => {setMessage(null)}, 5000)\n        })\n    }\n  }\n\n  const removePerson = (id) => {\n    personService.remove(id).then(() => {\n      const personToRemove = persons.find(person => person.id === id)\n      setPersons(persons.filter(person => person.id !== id))\n      setNotificationStyle(successNotificationStyle)\n      setMessage(`${personToRemove.name} poistettiin`)\n      setTimeout(() => {setMessage(null)}, 5000)\n    })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setPersonsToShow(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification message={message} notificationStyle={notificationStyle}/>\n      <Filter\n        personsToShow={personsToShow}\n        handleFilterChange={handleFilterChange}\n      />\n      <h3>lisää uusi</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numerot</h3>\n      <Persons\n        persons={persons.filter(\n          person => person.name.toUpperCase().includes(\n            personsToShow.toUpperCase()\n          )\n        )}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n}\n\nconst Filter = ({ personsToShow, handleFilterChange }) => (\n  <form>\n    <div>\n      rajaa näytettäviä <input value={personsToShow} onChange={handleFilterChange} />\n    </div>\n  </form>\n)\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => (\n  <form onSubmit={addPerson}>\n    <div>\n      nimi: <input value={newName} onChange={handleNameChange} />\n    </div>\n    <div>\n      numero: <input value={newNumber} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">lisää</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({ persons, removePerson }) => (\n  persons.map(person =>\n    <p key={person.id}>\n      {person.name} {person.number} <RemoveButton removePerson={removePerson} person={person} />\n    </p>\n  )\n)\n\nconst RemoveButton = ({ removePerson, person }) => {\n  const confirmWindow = () => {\n    if (window.confirm(\"Poistetaanko \".concat(person.name))) {\n      removePerson(person.id)\n    }\n  }\n  return (\n    <button onClick={confirmWindow}>poista</button>\n  )\n}\n\nconst Notification = ({message, notificationStyle}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}